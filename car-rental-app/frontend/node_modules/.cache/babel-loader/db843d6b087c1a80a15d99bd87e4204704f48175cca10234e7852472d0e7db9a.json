{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://servermysqlcn1.mysql.database.azure.com/api',\n  // URL base da API\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Funções para gerenciar veículos\nexport const getVehicles = () => api.get('/vehicles');\nexport const getVehicleById = id => api.get(`/vehicles/${id}`);\nexport const createVehicle = async vehicle => {\n  const response = await fetch('http://localhost:5000/api/vehicles', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(vehicle)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao criar veículo');\n  }\n  return response.json();\n};\nexport const updateVehicle = async (id, vehicle) => {\n  const response = await fetch(`http://localhost:5000/api/vehicles/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(vehicle)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao atualizar veículo');\n  }\n  return response.json();\n};\nexport const deleteVehicle = async id => {\n  const response = await fetch(`http://localhost:5000/api/vehicles/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao excluir veículo');\n  }\n  return response.json();\n};\nexport const fetchVehiclesData = async () => {\n  const response = await fetch('http://localhost:5000/api/vehicles');\n  if (!response.ok) {\n    throw new Error('Erro ao buscar veículos');\n  }\n  return response.json();\n};\n// Funções para gerenciar clientes\nexport const getClients = () => api.get('/clients');\nexport const getClientById = id => api.get(`/clients/${id}`);\nexport const createClient = async client => {\n  const response = await fetch('http://localhost:5000/api/clients', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(client)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao criar cliente');\n  }\n  return response.json();\n};\nexport const updateClient = async (id, client) => {\n  const response = await fetch(`http://localhost:5000/api/clients/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(client)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao atualizar cliente');\n  }\n  return response.json();\n};\nexport const deleteClient = async id => {\n  const response = await fetch(`http://localhost:5000/api/clients/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao excluir cliente');\n  }\n  return response.json();\n};\nexport const fetchClientsData = async () => {\n  const response = await fetch('http://localhost:5000/api/clients');\n  if (!response.ok) {\n    throw new Error('Erro ao buscar clientes');\n  }\n  return response.json();\n};\nexport const fetchClientRentals = async clientId => {\n  const response = await fetch(`http://localhost:5000/api/clients/${clientId}/rentals`);\n  if (!response.ok) {\n    throw new Error('Erro ao buscar histórico de locações do cliente');\n  }\n  return response.json();\n};\n\n// Funções para gerenciar locações\nexport const getRentals = () => api.get('/rentals');\nexport const getRentalById = id => api.get(`/rentals/${id}`);\nexport const fetchRentalsData = async () => {\n  const response = await fetch('http://localhost:5000/api/rentals');\n  if (!response.ok) {\n    throw new Error('Erro ao buscar locações');\n  }\n  return response.json();\n};\nexport const createRental = async rental => {\n  const response = await fetch('http://localhost:5000/api/rentals', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(rental)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao criar locação');\n  }\n  return response.json();\n};\nexport const updateRental = async (id, rental) => {\n  const response = await fetch(`http://localhost:5000/api/rentals/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(rental)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao atualizar locação');\n  }\n  return response.json();\n};\nexport const deleteRental = async id => {\n  const response = await fetch(`http://localhost:5000/api/rentals/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao excluir locação');\n  }\n  return response.json();\n};\nexport const fetchStats = async () => {\n  const response = await fetch('http://localhost:5000/api/stats');\n  if (!response.ok) {\n    throw new Error('Erro ao buscar estatísticas');\n  }\n  return response.json();\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getVehicles","get","getVehicleById","id","createVehicle","vehicle","response","fetch","method","body","JSON","stringify","ok","Error","json","updateVehicle","deleteVehicle","fetchVehiclesData","getClients","getClientById","createClient","client","updateClient","deleteClient","fetchClientsData","fetchClientRentals","clientId","getRentals","getRentalById","fetchRentalsData","createRental","rental","updateRental","deleteRental","fetchStats"],"sources":["C:/Users/ribeivi/OneDrive - Konecranes Plc/Desktop/MEU/FATEC/5º Sem/Computação em nuvem I/AV1/car-rental-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://servermysqlcn1.mysql.database.azure.com/api', // URL base da API\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Funções para gerenciar veículos\nexport const getVehicles = () => api.get('/vehicles');\nexport const getVehicleById = (id) => api.get(`/vehicles/${id}`);\nexport const createVehicle = async (vehicle) => {\n    const response = await fetch('http://localhost:5000/api/vehicles', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(vehicle),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao criar veículo');\n    }\n\n    return response.json();\n};\nexport const updateVehicle = async (id, vehicle) => {\n    const response = await fetch(`http://localhost:5000/api/vehicles/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(vehicle),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao atualizar veículo');\n    }\n\n    return response.json();\n};\nexport const deleteVehicle = async (id) => {\n    const response = await fetch(`http://localhost:5000/api/vehicles/${id}`, {\n        method: 'DELETE',\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao excluir veículo');\n    }\n\n    return response.json();\n};\nexport const fetchVehiclesData = async () => {\n    const response = await fetch('http://localhost:5000/api/vehicles');\n    if (!response.ok) {\n        throw new Error('Erro ao buscar veículos');\n    }\n    return response.json();\n};\n// Funções para gerenciar clientes\nexport const getClients = () => api.get('/clients');\nexport const getClientById = (id) => api.get(`/clients/${id}`);\nexport const createClient = async (client) => {\n    const response = await fetch('http://localhost:5000/api/clients', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(client),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao criar cliente');\n    }\n\n    return response.json();\n};\nexport const updateClient = async (id, client) => {\n    const response = await fetch(`http://localhost:5000/api/clients/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(client),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao atualizar cliente');\n    }\n\n    return response.json();\n};\nexport const deleteClient = async (id) => {\n    const response = await fetch(`http://localhost:5000/api/clients/${id}`, {\n        method: 'DELETE',\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao excluir cliente');\n    }\n\n    return response.json();\n};\nexport const fetchClientsData = async () => {\n    const response = await fetch('http://localhost:5000/api/clients');\n    if (!response.ok) {\n        throw new Error('Erro ao buscar clientes');\n    }\n    return response.json();\n};\n\nexport const fetchClientRentals = async (clientId) => {\n    const response = await fetch(`http://localhost:5000/api/clients/${clientId}/rentals`);\n    if (!response.ok) {\n        throw new Error('Erro ao buscar histórico de locações do cliente');\n    }\n    return response.json();\n};\n\n// Funções para gerenciar locações\nexport const getRentals = () => api.get('/rentals');\nexport const getRentalById = (id) => api.get(`/rentals/${id}`);\nexport const fetchRentalsData = async () => {\n    const response = await fetch('http://localhost:5000/api/rentals');\n    if (!response.ok) {\n        throw new Error('Erro ao buscar locações');\n    }\n    return response.json();\n};\n\nexport const createRental = async (rental) => {\n    const response = await fetch('http://localhost:5000/api/rentals', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(rental),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao criar locação');\n    }\n\n    return response.json();\n};\n\nexport const updateRental = async (id, rental) => {\n    const response = await fetch(`http://localhost:5000/api/rentals/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(rental),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao atualizar locação');\n    }\n\n    return response.json();\n};\n\nexport const deleteRental = async (id) => {\n    const response = await fetch(`http://localhost:5000/api/rentals/${id}`, {\n        method: 'DELETE',\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao excluir locação');\n    }\n\n    return response.json();\n};\n\nexport const fetchStats = async () => {\n    const response = await fetch('http://localhost:5000/api/stats');\n    if (!response.ok) {\n        throw new Error('Erro ao buscar estatísticas');\n    }\n    return response.json();\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}