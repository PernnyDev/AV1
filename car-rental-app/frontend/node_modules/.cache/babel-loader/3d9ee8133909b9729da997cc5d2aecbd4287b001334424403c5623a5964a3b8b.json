{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://servermysqlcn1.mysql.database.azure.com/api',\n  // URL base da API\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Funções para gerenciar veículos\nexport const getVehicles = () => api.get('/vehicles');\nexport const getVehicleById = id => api.get(`/vehicles/${id}`);\nexport const createVehicle = async vehicle => {\n  const response = await fetch('http://localhost:5000/api/vehicles', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(vehicle)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao criar veículo');\n  }\n  return response.json();\n};\nexport const updateVehicle = async (id, vehicle) => {\n  const response = await fetch(`http://localhost:5000/api/vehicles/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(vehicle)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao atualizar veículo');\n  }\n  return response.json();\n};\nexport const deleteVehicle = id => api.delete(`/vehicles/${id}`);\nexport const fetchVehiclesData = async () => {\n  const response = await fetch('http://localhost:5000/api/vehicles');\n  if (!response.ok) {\n    throw new Error('Erro ao buscar veículos');\n  }\n  return response.json();\n};\n// Funções para gerenciar clientes\nexport const getClients = () => api.get('/clients');\nexport const getClientById = id => api.get(`/clients/${id}`);\nexport const createClient = client => api.post('/clients', client);\nexport const updateClient = async (id, client) => {\n  const response = await fetch(`http://localhost:5000/api/clients/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(client)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao atualizar cliente');\n  }\n  return response.json();\n};\nexport const deleteClient = id => api.delete(`/clients/${id}`);\nexport const fetchClientsData = async () => {\n  const response = await fetch('http://localhost:5000/api/clients');\n  if (!response.ok) {\n    throw new Error('Erro ao buscar clientes');\n  }\n  return response.json();\n};\n\n// Funções para gerenciar locações\nexport const getRentals = () => api.get('/rentals');\nexport const getRentalById = id => api.get(`/rentals/${id}`);\nexport const createRental = rental => api.post('/rentals', rental);\nexport const updateRental = (id, rental) => api.put(`/rentals/${id}`, rental);\nexport const deleteRental = id => api.delete(`/rentals/${id}`);\nexport const fetchRentalsData = async () => {\n  const response = await fetch('http://localhost:5000/api/rentals');\n  return response.json();\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","getVehicles","get","getVehicleById","id","createVehicle","vehicle","response","fetch","method","body","JSON","stringify","ok","Error","json","updateVehicle","deleteVehicle","delete","fetchVehiclesData","getClients","getClientById","createClient","client","post","updateClient","deleteClient","fetchClientsData","getRentals","getRentalById","createRental","rental","updateRental","put","deleteRental","fetchRentalsData"],"sources":["C:/Users/ribeivi/OneDrive - Konecranes Plc/Desktop/MEU/FATEC/5º Sem/Computação em nuvem I/AV1/car-rental-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://servermysqlcn1.mysql.database.azure.com/api', // URL base da API\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Funções para gerenciar veículos\nexport const getVehicles = () => api.get('/vehicles');\nexport const getVehicleById = (id) => api.get(`/vehicles/${id}`);\nexport const createVehicle = async (vehicle) => {\n    const response = await fetch('http://localhost:5000/api/vehicles', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(vehicle),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao criar veículo');\n    }\n\n    return response.json();\n};\nexport const updateVehicle = async (id, vehicle) => {\n    const response = await fetch(`http://localhost:5000/api/vehicles/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(vehicle),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao atualizar veículo');\n    }\n\n    return response.json();\n};\nexport const deleteVehicle = (id) => api.delete(`/vehicles/${id}`);\nexport const fetchVehiclesData = async () => {\n    const response = await fetch('http://localhost:5000/api/vehicles');\n    if (!response.ok) {\n        throw new Error('Erro ao buscar veículos');\n    }\n    return response.json();\n};\n// Funções para gerenciar clientes\nexport const getClients = () => api.get('/clients');\nexport const getClientById = (id) => api.get(`/clients/${id}`);\nexport const createClient = (client) => api.post('/clients', client);\nexport const updateClient = async (id, client) => {\n    const response = await fetch(`http://localhost:5000/api/clients/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(client),\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao atualizar cliente');\n    }\n\n    return response.json();\n};\nexport const deleteClient = (id) => api.delete(`/clients/${id}`);\nexport const fetchClientsData = async () => {\n    const response = await fetch('http://localhost:5000/api/clients');\n    if (!response.ok) {\n        throw new Error('Erro ao buscar clientes');\n    }\n    return response.json();\n};\n\n// Funções para gerenciar locações\nexport const getRentals = () => api.get('/rentals');\nexport const getRentalById = (id) => api.get(`/rentals/${id}`);\nexport const createRental = (rental) => api.post('/rentals', rental);\nexport const updateRental = (id, rental) => api.put(`/rentals/${id}`, rental);\nexport const deleteRental = (id) => api.delete(`/rentals/${id}`);\n\nexport const fetchRentalsData = async () => {\n    const response = await fetch('http://localhost:5000/api/rentals');\n    return response.json();\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}